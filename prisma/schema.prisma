generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String         @id @default(cuid())
  name      String
  email     String
  password  String
  mobile    String?        @unique
  vpa       String         @unique
  createdAt DateTime       @default(now())
  accounts  bank_account[]
}

model bank_account {
  id         String         @id @default(cuid())
  userId     String
  accountRef String         @unique
  createdAt  DateTime       @default(now())
  user       user           @relation(fields: [userId], references: [id], onDelete: Cascade)
  ledger     ledger_entry[]
}

model ledger_entry {
  id           String       @id @default(cuid())
  accountId    String
  txnId        String
  type         String
  amount       BigInt
  createdAt    DateTime     @default(now())
  bank_account bank_account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@index([txnId])
}

model transaction {
  id               String           @id
  fromVpa          String
  toVpa            String
  amount           BigInt
  status           String           @default("pending")
  reason           String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  transaction_type TransactionType?

  @@index([fromVpa, toVpa])
}

model idempotency_key {
  id        String   @id
  request   Json
  response  Json?
  createdAt DateTime @default(now())

  @@index([createdAt])
}

enum Role {
  USER
  ADMIN
}

enum TransactionType {
  DIRECT_DEPOSIT
  TRANSFER
  WITHDRAWAL
  PAYMENT
  REFUND
}
